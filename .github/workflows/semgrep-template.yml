---
name: Semgrep containers

defaults:
  run:
   shell: bash

on:
  workflow_call:
    inputs:
      branch_name:
        type: string
        required: false
      cancel_in_progress:
        type: boolean
        default: true
      semgrep_config:
        type: string
        default: p/default
      fail_severity:
        type: string
        default: error
      filter_mode:
        type: string
        default: added

  workflow_dispatch:
      
permissions:
  contents: read
  pull-requests: write

jobs:
  semgrep:
    name: Run Semgrep containers
    runs-on: ubuntu-latest

    container:
      image: semgrep/semgrep:1.124.0

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Reviewdog
        uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: latest

      - name: jq
        run: apk add --no-cache jq

      - name: reviewdog
        run: |
          echo " --config $SEMGREP_RULES --severity ${FAIL_LEVEL^^}"
          echo " filter mode $FILTER_MODE fail-level $FAIL_LEVEL"
          
          CUSTOM_MESSAGE="If you believe this is a false positive or acceptable risk, add # nosemgrep or // nosemgrep to skip this finding."

          semgrep --config="$SEMGREP_RULES" --severity="${FAIL_LEVEL^^}" --json \
            | jq -r --arg msg "$CUSTOM_MESSAGE" '
                .results[]
                | "%E\(.extra.severity[0:1]):\(.path):\(.start.line): [\(.extra.severity)] \(.extra.message)" +
                  (if (.extra.metadata.references | length) > 0 then "\n%CReferences: " + (.extra.metadata.references | join(", ")) else "" end) +
                  "\n%C" + $msg +
                  "\n%Z"
              ' \
            | reviewdog \
                -efm='%E%t:%f:%l: %m%n%C%n%Z' \
                -name="semgrep" \
                -reporter=github-pr-review \
                -fail-level=error \
                -filter-mode=added
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SEMGREP_RULES: ${{ inputs.semgrep_config }}
          FILTER_MODE: ${{ inputs.filter_mode }}
          FAIL_LEVEL: ${{ inputs.fail_severity }}
